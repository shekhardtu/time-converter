// Minimal date-fns implementation for Chrome extension
(function (global, factory) {
  typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports) :
  typeof define === 'function' && define.amd ? define(['exports'], factory) :
  (global = global || self, factory(global.dateFns = {}));
}(this, (function (exports) {
  'use strict';

  // Parse function
  function parse(dateString, _formatString, _referenceDate) {
    // Simple implementation - just use Date constructor for now
    return new Date(dateString);
  }

  // ParseISO function
  function parseISO(dateString) {
    return new Date(dateString);
  }

  // Format function
  function format(date, formatString) {
    if (!(date instanceof Date) || isNaN(date.getTime())) {
      return 'Invalid Date';
    }
    
    // Simple format mapping
    const year = date.getFullYear();
    const month = String(date.getMonth() + 1).padStart(2, '0');
    const day = String(date.getDate()).padStart(2, '0');
    const hour = String(date.getHours()).padStart(2, '0');
    const minute = String(date.getMinutes()).padStart(2, '0');
    const second = String(date.getSeconds()).padStart(2, '0');
    
    return formatString
      .replace(/yyyy/g, year)
      .replace(/MM/g, month)
      .replace(/dd/g, day)
      .replace(/HH/g, hour)
      .replace(/mm/g, minute)
      .replace(/ss/g, second);
  }

  // Export functions
  exports.parse = parse;
  exports.parseISO = parseISO;
  exports.format = format;

})));